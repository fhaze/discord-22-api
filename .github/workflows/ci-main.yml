name: Deploy Discord 22 Api

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_push:
    runs-on: ubuntu-latest
    environment: main

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Get short commit hash
        id: commit_hash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/discord-22-api:${{ steps.commit_hash.outputs.sha_short }}

#  deploy_tencent:
#    runs-on: ubuntu-latest
#    needs: [build_push]
#    environment: main
#
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v2
#
#      - name: Get short commit hash
#        id: commit_hash
#        run: |
#          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
#          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
#
#      - name: Deploy discord 22 api to cluster
#        uses: wahyd4/kubectl-helm-action@master
#        env:
#          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#        with:
#          args: |
#            helm upgrade \
#            --install discord-22-api charts/discord-22-api \
#            --set image.tag=${{ steps.commit_hash.outputs.sha_short }} \
#            --set secrets.rootApiKey=${{ secrets.ROOT_API_KEY }} \
#            --set secrets.dbHost=${{ secrets.DB_HOST }} \
#            --set secrets.dbPort=${{ secrets.DB_PORT }} \
#            --set secrets.dbName=${{ secrets.DB_NAME }} \
#            --set secrets.dbUser=${{ secrets.DB_USER }} \
#            --set secrets.dbPass=${{ secrets.DB_PASS }} \
#            --set config.commitHash=${{ steps.commit_hash.outputs.sha_short }}